#!/bin/bash
#
# Test case for efficient reuse of unallocated clusters in regards to
# fragmentation
#
# Copyright (C) 2013 Red Hat, Inc.
#
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 2 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.
#

# creator
owner=mreitz@redhat.com

seq=`basename $0`
echo "QA output created by $seq"

here=`pwd`
tmp=/tmp/$$
status=1	# failure is the default!

_cleanup()
{
	_cleanup_test_img
}
trap "_cleanup; exit \$status" 0 1 2 3 15

# get standard environment, filters and checks
. ./common.rc
. ./common.filter

# This tests qocw2-specific low-level functionality
_supported_fmt qcow2
_supported_proto generic
_supported_os Linux

IMGOPTS="compat=1.1"
IMG_SIZE=$((64 * 1024 * 1024))

echo
echo "=== Comparing clean image to fragmented one ==="
echo
_make_test_img $IMG_SIZE
# Fill image cleanly
$QEMU_IO -c "write 0 $IMG_SIZE" "$TEST_IMG" | _filter_qemu_io
# Get size
size_clean=`stat -c "%s" "$TEST_IMG"`
# Now fragment the image
$QEMU_IO -c "discard $(($IMG_SIZE / 2)) $(($IMG_SIZE / 2))" \
         -c "discard 0 $(($IMG_SIZE / 2 - 1024 * 1024))" \
         -c "write $(($IMG_SIZE / 2)) $(($IMG_SIZE / 2))" \
         -c "write 0 $IMG_SIZE" \
         "$TEST_IMG" | _filter_qemu_io
# Get new size
size_frag=`stat -c "%s" "$TEST_IMG"`

# Sizes should be equal
if [ "$size_clean" != "$size_frag" ]; then
    echo "*** Image sizes differ ($size_clean clean, $size_frag fragmented)"
else
    echo "*** Image sizes equal; test done"
    status=0
fi

rm -f $seq.full
